name: 'Deploy workflow'

on:
  push:
    branches:
      - '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+.[0-9]+'

env:
  QT_MIRROR: https://mirrors.ocf.berkeley.edu/qt/ # https://download.qt.io/static/mirrorlist/

jobs:
  Build-Windows:
    runs-on: windows-latest

    env:
      QT_VERSION: 6.6.2
      QIF_VERSION: 4.7
      BUILD_ARCH: 64

    steps:
    - name: 'Get sources'
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 1

    - name: 'Setup ccache'
      uses: hendrikmuhs/ccache-action@v1.2

    - name: 'Install Qt'
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        modules: 'qthttpserver qtwebsockets qt5compat'
        dir: ${{ runner.temp }}
        setup-python: 'true'
        tools: 'tools_ifw'
        set-env: 'true'
        extra: '--external 7z --base ${{ env.QT_MIRROR }}'

    - name: 'Setup mvsc'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: 'x64'

    - name: 'Build project'
      shell: cmd
      run: |
        set BUILD_ARCH=${{ env.BUILD_ARCH }}
        set QT_BIN_DIR="${{ runner.temp }}\\Qt\\${{ env.QT_VERSION }}\\msvc2019_64\\bin"
        set QIF_BIN_DIR="${{ runner.temp }}\\Qt\\Tools\\QtInstallerFramework\\${{ env.QIF_VERSION }}\\bin"
        call deploy\\build_windows.bat

    - name: 'Upload installer artifact'
      uses: actions/upload-artifact@v4
      with:
        name: CTProxyServer_Windows_installer
        path: proxyserver_x${{ env.BUILD_ARCH }}.exe
        retention-days: 7

    - name: 'Upload unpacked artifact'
      uses: actions/upload-artifact@v4
      with:
        name: CTProxyServer_Windows_unpacked
        path: deploy\\build_${{ env.BUILD_ARCH }}\\release
        retention-days: 7

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          proxyserver_x${{ env.BUILD_ARCH }}.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
